// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint"
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'external_libs'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {

    //9.3.9.v20160517
    compile 'org.bouncycastle:bcprov-jdk15on:1.59'
    compile 'com.google.zxing:core:3.2.1'

    compile 'com.h2database:h2:1.4.191'
    compile group: 'com.google.zxing', name: 'javase', version: '3.2.1'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.6.v20170531'
    compile group: 'org.eclipse.jetty', name: 'jetty-http-spi', version: '9.4.6.v20170531'
    compile 'org.eclipse.jetty:jetty-security:9.4.6.v20170531'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version: '9.4.6.v20170531'
    compile group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.4.6.v20170531'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '5.3.2'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '5.3.2'
    //compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.18'
    //LOGGING FRAMEWOKRS
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.+'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.+'
    //END LOGGING FRAMEWOKRS
    compile group: 'org.apache.tika', name: 'tika-parsers', version: '1.12'
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.12'
    compile group: 'org.eclipse.jetty.websocket', name: 'websocket-api', version: '9.4.6.v20170531'
    compile group: 'org.eclipse.jetty.websocket', name: 'websocket-server', version: '9.4.6.v20170531'
    compile 'org.bitlet:weupnp:0.1.4'

    compile 'org.mongodb:mongodb-driver:3.3.0'

    compile 'com.squareup.retrofit2:retrofit:2.+'
    compile 'com.squareup.retrofit2:converter-gson:2.+'

    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'

    compile group: 'com.rethinkdb', name: 'rethinkdb-driver', version: '2.3.3'

    compile name: 'IPFS'
    compile name: 'jTMSP-0.0.1'

    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.4'

    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1211'

    //Dev tools
    compile group: 'org.springframework.shell', name: 'spring-shell', version: '1.2.0.RELEASE'


}

mainClassName = "xin.Xin"
applicationName = 'iep-node'
applicationDefaultJvmArgs = ["-Dmrn.runtime.dirProvider=ENV_DIR_PROVIDER"]

task devStartScripts(type: CreateStartScripts) {
    mainClassName = 'xin.dev.XinDevTools'
    applicationName = 'dev'
	defaultJvmOpts = ["-Dmrn.runtime.dirProvider=ENV_DIR_PROVIDER"]
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir    
}

tasks.withType(CreateStartScripts).each { task ->
    task.doLast {    
        def winScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()

        unixScriptFile.text = unixScriptFile.text.replace('ENV_DIR_PROVIDER', 'xin.env.UnixUserDirProvider')
        winScriptFile.text = winScriptFile.text.replace('ENV_DIR_PROVIDER', 'xin.env.WindowsUserDirProvider')
    }
}

applicationDistribution.from("conf") {
    into "conf"
}

applicationDistribution.into("bin") {
    duplicatesStrategy= DuplicatesStrategy.EXCLUDE
    from(devStartScripts)
    fileMode = 0755
}
